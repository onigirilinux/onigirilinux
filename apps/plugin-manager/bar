#!/usr/bin/env python3
import sys
import os
import requests
import json
import tempfile
import shutil
import subprocess
from pathlib import Path

def get_plugin(plugin_name):
    print(f"Downloading plugin {plugin_name}...")
    
    try:
        # Check if plugin exists
        api_url = f"https://api.github.com/repos/onigirilinux/{plugin_name}/releases/latest"
        response = requests.get(api_url)
        
        if response.status_code != 200:
            print(f"Error: Plugin {plugin_name} does not exist or is not accessible")
            sys.exit(1)
            
        release_data = response.json()
        
        # Create temporary directory
        with tempfile.TemporaryDirectory() as temp_dir:
            # Download all assets
            for asset in release_data["assets"]:
                asset_url = asset["browser_download_url"]
                asset_name = asset["name"]
                
                print(f"Downloading {asset_name}...")
                asset_response = requests.get(asset_url)
                
                asset_path = os.path.join(temp_dir, asset_name)
                with open(asset_path, "wb") as f:
                    f.write(asset_response.content)
            
            # Look for installation script
            install_script = os.path.join(temp_dir, "install.sh")
            if os.path.exists(install_script):
                print("Running installation script...")
                subprocess.run(["bash", install_script], cwd=temp_dir, check=True)
            else:
                # If no installation script, just copy the files
                plugin_dir = Path("/usr/share/onigirilinux/plugins") / plugin_name
                plugin_dir.mkdir(parents=True, exist_ok=True)
                
                for file in os.listdir(temp_dir):
                    src = os.path.join(temp_dir, file)
                    dst = plugin_dir / file
                    if os.path.isfile(src):
                        shutil.copy2(src, dst)
        
        print(f"Plugin {plugin_name} installed successfully!")
        
    except Exception as e:
        print(f"Error during plugin installation: {str(e)}")
        sys.exit(1)

def main():
    if len(sys.argv) < 2:
        print("Usage: bar get <plugin_name>")
        sys.exit(1)
        
    command = sys.argv[1]
    
    if command == "get" and len(sys.argv) == 3:
        plugin_name = sys.argv[2]
        get_plugin(plugin_name)
    else:
        print("Invalid command. Usage: bar get <plugin_name>")
        sys.exit(1)

if __name__ == "__main__":
    main()
